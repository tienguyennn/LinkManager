@{
    ViewBag.Title = "Quản lý tài khoản";
    Layout = "~/Views/Shared/_LayoutAce.cshtml";
    ViewBag.ModuleName = "Quản lý người dùng";
    ViewBag.PageName = "Danh sách người dùng";
    ViewBag.ModuleCode = "QLTaiKhoan";
}
@using Model.IdentityEntities;
@using Newtonsoft.Json;
@using Service.Common;
@using Service.AppUserService.Dto;
@using Web.Areas.UserArea.Models
@model UserListViewModel
@{
    var lstData = Html.Raw(JsonConvert.SerializeObject(Model.ListUser.ListItem));
}
@section ActionBarRight{


    <a href="#collapseDiv" class="btn btn-sm btn-primary" aria-controls="collapsePanel" data-toggle="collapse" role="button">
        <i class="fa fa-search"></i> Tìm kiếm
    </a>

    <a href="javascript:void(0)" onclick="CreateAction('/UserArea/User/Create?vaitroid=@ViewBag.vaitroid')" class="btn btn-primary btn-sm"><i class="fa fa-plus"></i> Thêm mới</a>
}
<style>
    .hinet-table.clone {
        display: none;
    }

    .dropdowntt div {
        margin-top: -12px;
    }
</style>
@Html.Partial("_SearchPartial")

<div id="tbl-user" class="hntbl-cover table-scroll">
    <div class="table-wrap">
        <table class="hinet-table table table-striped table-hover fixed-table" cellspacing="0" width="100%">
            <thead>
                <tr>
                    <th class="fixed-side">#</th>
                    <th class="fixed-side">Tác vụ</th>
                    <th>Họ tên</th>
                    <th>Tên tài khoản</th>
                    <th>Email</th>
                    <th>Điện thoại</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@section scripts{
    <script>
        var lstData = eval(@lstData);
        var moduleTableSelector="#tbl-user";
        function pagefunction(){
            var conf=[
                {
                    tdClass: "center fixed-side",
                    isSort: false,
                    nameModel: "",
                    isCounter:true,
                },
				{
					isSort: false,
					nameModel: "",
					tdClass: "center dropdowntt",
					content: function (data) {
                        var result = "<div class='btn-group'>";
                        result += "<button data-toggle='dropdown' class='btn btn-xs btn-primary btn-white dropdown-toggle' aria-expanded='false'>Thao tác<i class='ace-icon fa fa-angle-down icon-on-right'></i>";
                        result += " </button>";
                        result += "<ul class='dropdown-menu'>";
                        result += "<li><a href='javascript:void(0)' onclick='ResetPass(" + data.Id + ")'   title = 'Reset Password'><i class='fa fa-key'> </i> Reset Password</a> </li>";
                        result += `<li><a href='javascript:void(0)' onclick='EditAction("/UserArea/User/Edit?id=${data.Id}&vaitroid=@ViewBag.vaitroid")'   title = 'Chỉnh sửa'><i class='glyphicon glyphicon-edit'> </i> Sửa thông tin</a> </li>`;
                        result += "<li><a href='javascript:void(0)' onclick='DeleteAction(\"/UserArea/User/Delete/" + data.Id + "\")'  title = 'Xóa'><i class=' glyphicon glyphicon-remove' style='color:red'> </i> Xóa người dùng</a></li>";
                        result += "</ul></div>";
						return result;
					}
				},
                {
                    isSort:true,
                    nameModel:'FullName',
					content: function (data) {
						var result = "";
						var str = "";
						return data.FullName + str + "</br>" + result;
                    }
                },
                 {
                     isSort:true,
                     nameModel:'UserName',
                     content: function (data) {
						 var str = "";
						 str += "<a href='/UserArea/User/Detail/" + data.Id + "'> " + data.UserName + "</a><br/>";
						 return str;
                     }
                },

                {
                    isSort: true,
                    nameModel: 'Email',
                    content: function (data) {
						return ShowMessageIfEmpty(data.Email)
                    }
                },
                {
                    isSort: true,
                    nameModel: 'PhoneNumber',
                    content: function (data) {
						return ShowMessageIfEmpty(data.PhoneNumber);
                    }
                },
            ];


            var getdatafunc=function(page,sortQuery,pageSize){
                $.ajax({
                    url: '/UserArea/User/getData',
                    type: 'post',
                    cache: false,
                    data:{"indexPage":page,"sortQuery":sortQuery,"pageSize":pageSize},
                    success: function (data) {
                        $(moduleTableSelector).hinetTable("data",{
                            pageSize:pageSize!=-1?pageSize:data.Count,
                            pageIndex:page,
                            pagecount: data.TotalPage,
                            recordCount: data.Count,
                            listItem: data.ListItem,
                        });

                    },
                    error: function (err) {
                        CommonJS.alert(xhr.responseText);
                    }
                });

            }

            var tblData=$("#tbl-user").hinetTable("init",{
                pageSizeList:{size:[20,50,100,-1],label:['20','50','100','Tất cả']},
                pagecount: @Model.ListUser.TotalPage,
                recordCount: @Model.ListUser.Count,
                actionToolBar: '',
                getData: getdatafunc,
                listItem:lstData,
                config:conf
            });

        }

        function AfterSussessActionAjaxform() {
            $(moduleTableSelector).hinetTable("reload");
        }
        function AjaxSearchSuccess(result) {
            $(moduleTableSelector).hinetTable("data", {
                pageIndex: 1,
                pagecount: result.TotalPage,
                recordCount: result.Count,
                listItem: result.ListItem,
            });
            }
            function ResetPass(id) {
                AjaxCall("/UserArea/user/ResetPassword/" + id, "post", null, function (rs) {
                    if (rs.Status) {
                        NotiSuccess("Khôi phục mật khẩu thành công");
                    } else {
                        NotiError(rs.Message);
                    }
                })
        }
        function ConfirmData() {
           ;
            $.confirm({
                title: "Xác nhận thao tác",
                content: "Bạn chắc chắn muốn kế thừa quyền?",
                draggable: false,
                theme: 'material',
                buttons: {
                    confirm: {
                        btnClass: 'btn-primary',
                        text: "Xác nhận",
                        action: function () {
                              NotiSuccess("Thành công","Kế thừa quyền từu vai trò thành công!");
                              AfterSussessActionAjaxform();

                        }
                    },
                    cancel: {
                        text: "Đóng",
                        action: function () {

                        }
                    }
                }
            });
        }

		function LockUser(url, typeLock) {
			var content = "";
			var successstring = "";
			if (typeLock == true) {
				content = "Bạn chắc chắn muốn khóa tài khoản này?";
				successstring = "Khóa tào khoản thành công!";
			} else if (typeLock == false) {
				content = "Bạn chắc chắn muốn mở khóa tài khoản này?"
				successstring = "Mở khóa tào khoản thành công!";
			}
			$.confirm({
				title: "Xác nhận thao tác",
				content: content,
				draggable: false,
				theme: 'material',
				buttons: {
					confirm: {
						btnClass: 'btn-primary',
						text: "Xác nhận",
						action: function () {
							AjaxCall(url, 'post', null, function (rs) {
								if (rs.Status) {
									NotiSuccess("Thành công", successstring);
									AfterSussessActionAjaxform();
								} else {
									NotiError("Lỗi xử lý", rs.Message);
								}
							})
						}
					},
					cancel: {
						text: "Đóng",
						action: function () {

						}
					}
				}
			});
        }

        function onEditKhoaTuDong(idUser) {
            onOpenEditModal('/UserArea/User/EditThongTinKhoaTuDong', { idUser: idUser }, 'post');
        }

        function onTraCuuLogKhoaTruyCap(idUser) {
            onOpenEditModal('/UserArea/User/DanhSachLogKhoaTruyCap', { idUser: idUser }, 'post');
        }

        function onGenerateUserByRole() {
            onOpenEditModal('/UserArea/User/GenerateUserByRole', { }, 'post');
        }

        function onExportDanhSachTaiKhoan() {
            location.href = '/UserArea/User/ExportDanhSachTaiKhoan';
        }

        function onCheckAllUser(item) {
            $('#tbl-user').find('input[type=checkbox]').prop('checked', item.checked);
            var isShowDeleteButton = $('input.checkbox-row:checked').length > 0;
            if (isShowDeleteButton) {
                $('.btn-delete-multiple').removeClass('hide');
            } else {
                $('.btn-delete-multiple').addClass('hide');
            }
        }


        function onChangeCheckboxRow(item) {
            var checked = item.checked;
            $('input.checkbox-row[value="' + item.value + '"]').prop('checked', checked);

            var isShowDeleteButton = $('input.checkbox-row:checked').length > 0;
            if (isShowDeleteButton) {
                $('.btn-delete-multiple').removeClass('hide');
            } else {
                $('.btn-delete-multiple').addClass('hide');
            }
        }

        var onDeleteMultipleNguoiDung = function () {
            $.confirm({
                title: "Xác nhận xóa người dùng",
                content: 'Bạn có muốn xóa không?',
                draggable: false,
                theme: 'material',
                buttons: {
                    confirm: {
                        btnClass: 'btn-primary',
                        text: "Xác nhận",
                        action: function () {
                            var idsUser = [];
                            $('#tbl-user tbody').find('input[type=checkbox]:checked').each(function (index, item) {
                                if (Number.isInteger(parseInt(item.value))) {
                                    idsUser.push(item.value);
                                }
                            });
                            AjaxCall('/UserArea/User/DeleteMutipleUser', 'post', {idsUser: idsUser}, function (result) {
                                if (result.Status) {
                                    NotiSuccess("Thành công", result.Message);
                                    AfterSussessActionAjaxform();
                                } else {
                                    NotiError("Lỗi xử lý", result.Message);
                                }
                            })
                        }
                    },
                    cancel: {
                        text: "Đóng",
                        action: function () {

                        }
                    }
                }
            });
        }

        $(document).ready(function () {
            pagefunction();
            $('#btn-xoa-nguoidung').on('click', function () {
                onDeleteMultipleNguoiDung();
            })
        })

    </script>
}
