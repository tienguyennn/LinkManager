@{
    ViewBag.Title = "Quản lý tài khoản truy cập API";
    Layout = "~/Views/Shared/_LayoutAce.cshtml";
    ViewBag.ModuleName = "Quản lý tài khoản truy cập API";
    ViewBag.PageName = "Danh sách tài khoản truy cập API";
    ViewBag.ModuleCode = "AccountApi_Index";
}
@using Model.IdentityEntities;
@using Newtonsoft.Json;
@using Service.Common;
@using Service.AppUserService.Dto;
@using Web.Areas.UserArea.Models
@model UserListViewModel
@{
    var lstData = Html.Raw(JsonConvert.SerializeObject(Model.ListUser.ListItem));
}
@section ActionBarRight{
    <a href="#collapseDiv" class="btn btn-sm btn-primary" aria-controls="collapsePanel" data-toggle="collapse" role="button">
        <i class="fa fa-search"></i> Tìm kiếm
    </a>
    <a href="/UserArea/AccountApi/Import" class="btn btn-primary btn-sm"><i class="fa fa-upload"></i> Import</a>
    <a href="javascript:void(0)" onclick="CreateAction('/UserArea/AccountApi/Create')" class="btn btn-primary btn-sm"><i class="fa fa-plus"></i> Thêm mới</a>
}
@Html.Partial("_SearchPartial")

<div id="tbl-userApi" class="hntbl-cover table-scroll">
    <div class="table-wrap">
        <table class="hinet-table table table-striped table-hover fixed-table" cellspacing="0" width="100%">
            <thead>
                <tr>
                    <th class="fixed-side">#</th>
                    <th class="fixed-side">Tác vụ</th>
                    <th>Họ tên</th>
                    <th>Tên tài khoản</th>
                    <th>Email</th>
                    <th>Điện thoại</th>
                    <th>Ngày sinh</th>
                    <th>Giới tính</th>
                    <th>Địa chỉ</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@section scripts{
    <script>
        var lstData = eval(@lstData);
        var moduleTableSelector="#tbl-userApi";
        function pagefunction(){
            var conf=[
                {
                    tdClass: "center width50 fixed-side",
                    isSort: false,
                    nameModel: "",
                    isCounter:true,
                },
				{
					isSort: false,
					nameModel: "",
                    tdClass: "center  fixed-side",
					content: function (data) {
                        var result = "<div class='btn-group'>";
                        result += "<button data-toggle='dropdown' class='btn btn-xs btn-primary btn-white dropdown-toggle' aria-expanded='false'>Thao tác<i class='ace-icon fa fa-angle-down icon-on-right'></i>";
                        result += " </button>";
                        result += "<ul class='dropdown-menu'>";
                        result += `<li><a href='javascript:void(0)' onclick='EditAction("/UserArea/AccountApi/Detail/${data.Id}")'   title = 'Xem chi tiết'><i class='fa fa-key'> </i> Xem chi tiết</a> </li>`;
                        result += "<li><a href='javascript:void(0)' onclick='ResetPass(" + data.Id + ")'   title = 'Reset Password'><i class='fa fa-key'> </i> Reset Password</a> </li>";
                        result += "<li><a href='javascript:void(0)' onclick='EditAction(\"/UserArea/AccountApi/Edit/" + data.Id + "\")'   title = 'Chỉnh sửa'><i class='glyphicon glyphicon-edit'> </i> Sửa thông tin</a> </li>";
                        result += "<li><a href='javascript:void(0)' onclick='DeleteAction(\"/UserArea/User/Delete/" + data.Id + "\")'  title = 'Xóa'><i class=' glyphicon glyphicon-remove' style='color:red'> </i> Xóa người dùng</a></li>";
                        if (data.IsLock == true) {
							result += "<li><a href='javascript:void(0)' onclick='LockUser(\"/UserArea/User/LockUser?id=" + data.Id + "&islock=false" + "\",false)'  title = 'Mở khóa tài khoản'><i class='fa fa-unlock-alt' style='color:green;' > </i> Mở khóa tài khoản</a> </li>";
						} else {
							result += "<li><a href='javascript:void(0)' onclick='LockUser(\"/UserArea/User/LockUser?id=" + data.Id + "&islock=true" + "\",true)'  title = 'Khóa tài khoản'><i class='fa fa-lock' style='color:red;' > </i> Khóa tài khoản</a> </li>";
                        }
                        result += "</ul></div>";
						return result;
					}
				},
                {
                    isSort:true,
                    nameModel:'FullName',
					content: function (data) {
						var result = "";
						var str = "";
						if (data.IsCongTacVien == true) {
							str += '&nbsp;' + '<i class="fa fa-user" style="color:#3498db;" title="Cộng tác viên"></i>' + '&nbsp;';
						}
						for (var i = 0; i < data.ListRoles.length; i++) {
							result += '<b class="label label-warning">' + data.ListRoles[i].Name + '</b>' + '&nbsp;';
						}
						return data.FullName + str + "</br>" + result;
                    }
                },
                 {
                     isSort:true,
                     nameModel:'UserName',
                     content: function (data) {
						 var str = "";
                         str += `<p>${data.UserName}</p>`;
						 if (data.IsLock == true) {
							 str += '<b class="label label-danger">Bị khóa tài khoản</b>'
                         }
                         if (data.IsSendMail) {
                             str += "<i class='green glyphicon glyphicon-envelope'> </i>";
                         }
						 return str;
                     }
                },
                {
                    isSort: true,
                    nameModel: 'Email',
                    content: function (data) {
						return ShowMessageIfEmpty(data.Email)
                    }
                },
                {
                    isSort: true,
                    nameModel: 'PhoneNumber',
                    content: function (data) {
						return ShowMessageIfEmpty(data.PhoneNumber);
                    }
                },
                 {
                     isSort:true,
                     nameModel:'BirthDay',
                     content: function (data) {
                         return ToDate(data.BirthDay)
                     }
                 },
                 {
                     isSort:true,
                     nameModel:'Gender',
                     content: function (data) {

                         return data.Gender==1?"Nam":"Nữ";
                     }
                 },
                 {
                      isSort:false,
                      nameModel:"Address",
                      content: function (data) {
                          return ShowMessageIfEmpty(data.Address);
                      }
                },
            ];


            var getdatafunc=function(page,sortQuery,pageSize){
                $.ajax({
                    url: '/UserArea/AccountApi/getData',
                    type: 'post',
                    cache: false,
                    data:{"indexPage":page,"sortQuery":sortQuery,"pageSize":pageSize},
                    success: function (data) {
                        $(moduleTableSelector).hinetTable("data",{
                            pageSize:pageSize!=-1?pageSize:data.Count,
                            pageIndex:page,
                            pagecount: data.TotalPage,
                            recordCount: data.Count,
                            listItem: data.ListItem,
                        });

                    },
                    error: function (err) {
                        CommonJS.alert(xhr.responseText);
                    }
                });

            }

            var tblData=$("#tbl-userApi").hinetTable("init",{
                pageSizeList:{size:[20,50,100,-1],label:['20','50','100','Tất cả']},
                pagecount: @Model.ListUser.TotalPage,
                recordCount: @Model.ListUser.Count,
                actionToolBar: '',
                getData: getdatafunc,
                listItem:lstData,
                config: conf,
                showCheckBox: false
            });

        }

        function AfterSussessActionAjaxform() {
            $(moduleTableSelector).hinetTable("reload");
        }
        function AjaxSearchSuccess(result) {
            $(moduleTableSelector).hinetTable("data", {
                pageIndex: 1,
                pagecount: result.TotalPage,
                recordCount: result.Count,
                listItem: result.ListItem,
            });
            }
            function ResetPass(id) {
                AjaxCall("/UserArea/user/ResetPassword/" + id, "post", null, function (rs) {
                    if (rs.Status) {
                        NotiSuccess("Khôi phục mật khẩu thành công");
                    } else {
                        NotiError(rs.Message);
                    }
                })
		}

		function LockUser(url, typeLock) {
			var content = "";
			var successstring = "";
			if (typeLock == true) {
				content = "Bạn chắc chắn muốn khóa tài khoản này?";
				successstring = "Khóa tào khoản thành công!";
			} else if (typeLock == false) {
				content = "Bạn chắc chắn muốn mở khóa tài khoản này?"
				successstring = "Mở khóa tào khoản thành công!";
			}
			$.confirm({
				title: "Xác nhận thao tác",
				content: content,
				draggable: false,
				theme: 'material',
				buttons: {
					confirm: {
						btnClass: 'btn-primary',
						text: "Xác nhận",
						action: function () {
							AjaxCall(url, 'post', null, function (rs) {
								if (rs.Status) {
									NotiSuccess("Thành công", successstring);
									AfterSussessActionAjaxform();
								} else {
									NotiError("Lỗi xử lý", rs.Message);
								}
							})
						}
					},
					cancel: {
						text: "Đóng",
						action: function () {

						}
					}
				}
			});
        }
        $(document).ready(function () {
            pagefunction();
            $('#btn-xoa-nguoidung').on('click', function () {
                onDeleteMultipleNguoiDung();
            })
        })

    </script>
}
