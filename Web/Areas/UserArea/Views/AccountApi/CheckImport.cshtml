@{
    ViewBag.Title = "Kiểm tra dữ liệu Import";
    Layout = "~/Views/Shared/_LayoutAce.cshtml";
    ViewBag.ModuleName = "tài khoản truy cập API";
    ViewBag.PageName = "Kiểm tra dữ liệu Import";
}

@using Service.Common;
@using Web.Areas.UserArea.Models;
@using Service.AppUserService.Dto;
@using CommonHelper;
@using Newtonsoft.Json;

@model JsonResultImportBO<AppUserApiImportDto>
@{
    var dataJson = Html.Raw(JsonConvert.SerializeObject(Model));
}

@section ActionBarRight{
    <a class="btn btn-primary btn-sm" href="/UserArea/User/import">
        <i class="fa fa-reply"></i> <span>Quay lại</span>
    </a>
}

<div>
    <style>
        .dataTables_wrapper .row{
            overflow-x:scroll;
        }
    </style>
    @if (Model.Status == false)
    {
        <div class="alert alert-danger">
            <button type="button" class="close" data-dismiss="alert">
                <i class="ace-icon fa fa-times"></i>
            </button>

            <strong>
                <i class="ace-icon fa fa-times"></i>
                Có lỗi!
            </strong>
            @Model.Message
            <br>
        </div>
    }
    @if (!Model.ListData.Any() && !Model.ListFalse.Any())
    {
        <div class="alert alert-warning">
            <button type="button" class="close" data-dismiss="alert">
                <i class="ace-icon fa fa-times"></i>
            </button>
            <strong>Cảnh báo!</strong>
            Không có dữ liệu. Vui lòng kiểm tra lại file Import và cấu hình dòng đọc dữ liệu
            <br>
        </div>
    }
    <div style="padding: 5px 15px;    font-style: italic;">
        <span class="label label-warning label-white middle">
            <i class="ace-icon fa fa-exclamation-triangle bigger-120"></i>
            Lưu ý
        </span><span style="color:red;"> Vui lòng tích chọn các dòng để cập nhật</span>
    </div>
    <div class="col-xs-12 col-sm-12 widget-container-col ui-sortable" id="block-dung" style="display:none">
        <div class="widget-box widget-color-blue ui-sortable-handle">
            <div class="widget-header">
                <h4 class="widget-title"><strong>Dữ liệu hợp lệ</strong></h4>
            </div>

            <div class="widget-body">
                <div class="widget-main">
                    <div class="hntbl-cover" style="padding:10px;">
                        <table id="tbl-CheckData-truedata" class="hinet-table table table-striped table-bordered table-hover" cellspacing="0">
                            <thead>
                                <tr>
                                    <th class="width-30px"><input class="checkBoxControl" type="checkbox" /></th>
                                    <th>Họ và tên</th><th>Tên đăng nhập</th><th>Ngày sinh</th><th>Email</th><th>Số điện thoại</th><th>Địa chỉ</th>  
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>

                    </div>
                </div>
                <div class="widget-toolbox padding-8 clearfix">
                    <div class="center">
                        <a href="javascript:void(0)" onclick="saveImport()" class="btn btn-primary btn-md">Cập nhật</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xs-12 col-sm-12 widget-container-col ui-sortable" id="block-sai" style="display:none;">
        <div class="widget-box widget-color-red ui-sortable-handle">
            <div class="widget-header">
                <h4 class="widget-title"><strong>Dữ liệu không hợp lệ</strong></h4>
            </div>

            <div class="widget-body">
                <div class="widget-main">

                    <div class="hntbl-cover" style="padding:10px;">
                        <table id="tbl-false" class="hinet-table table table-striped table-bordered table-hover" cellspacing="0" >
                            <thead>
                                <tr>
                                    <th class="width-30px"><input class="checkBoxControl" type="checkbox" /></th>
                                    <th>Họ và tên</th><th>Tên đăng nhập</th><th>Ngày sinh</th><th>Email</th><th>Số điện thoại</th><th>Địa chỉ</th><th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody></tbody>

                        </table>

                    </div>

                </div>
                <div class="widget-toolbox padding-8 clearfix">
                    <div class="center">
                        <a href="javascript:void(0)" class="btn btn-danger btn-md" onclick="ExportError()">Tải file lỗi</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{

    <script src="~/assets/js/jquery.dataTables.min.js"></script>
    <script src="~/assets/js/dataTables.colVis.min.js"></script>
    <script src="~/assets/js/dataTables.tableTools.min.js"></script>
    <script src="~/assets/js/dataTables.bootstrap.min.js"></script>
    <script src="~/assets/js/datatables.responsive.min.js"></script>
    <script>

        $(".checkBoxControl").click(function () {
            var tbl = $(this).parents("table").first();
            if ($(this).prop("checked")) {
                tbl.find("input:checkbox.global_checkbox").each(function () {
                    if (!$(this).prop("checked")) {
                        $(this).prop("checked", true);
                    }

                })
            } else {
                tbl.find("input:checkbox.global_checkbox:checked").each(function () {
                    if ($(this).prop("checked")) {
                        $(this).prop("checked", false);
                    }
                })
            }
        })

        function saveImport() {
            var listObj = [];
            $("#tbl-CheckData-truedata tbody input:checkbox.global_checkbox:checked").each(function () {
                var row = $(this).parents("tr").first();
                var obj = {};
                obj["Id"]=($(this).val());
                row.find("td input[type=hidden]").each(function () {
                    var elem = $(this)
                    var name = elem.attr("data-name");
                    var vl = elem.val();
                    obj[name] = vl;
                })
                listObj.push(obj);
            });
            if (listObj.length > 0) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SaveImportData")',
                    data: JSON.stringify({ "Data": listObj }),
                    dataType: "json",
                    contentType: "application/json",
                    success: function (rs) {
                        if (rs.Status) {
                            NotiSuccess("Import dữ liệu thành công");
                            $("#block-dung").css("display", "none");
                            $("#block-dung input:checkbox.global_checkbox").prop("checked", false);

                            //$("#block-sai").css("display", "none");
                            //$("#block-sai input:checkbox.global_checkbox").prop("checked", false);
                        } else {
                            NotiError(rs.Message);
                        }
                    },
                    error: AjaxFormError,
                });
            } else {
                NotiError("Không có dữ liệu nào được chọn.");
            }
        }

        function ExportError() {
            var listObj = [];
            $("#block-sai tbody input:checkbox.global_checkbox:checked").each(function () {
                var row = $(this).parents("tr").first();
                var obj = [];
                row.find("td input[type=hidden]").each(function () {
                    obj.push($(this).val());
                })
                listObj.push(obj);
            });
            if (listObj.length > 0) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetExportError")',
                    data: JSON.stringify({ "lstData": listObj }),
                    dataType: "json",
                    contentType: "application/json",
                    success: function (rs) {
                        if (rs.Status) {
                            NotiSuccess("Export dữ liệu thành công");
                            var win1= window.open(rs.PathStore, '_self');
                            if (win1) {
                            } else {
                                alert('Hãy cho phép website mở popup');
                            }
                            $("#block-sai").css("display", "none");
                            $("#block-sai input:checkbox.global_checkbox").prop("checked", false);
                        } else {
                            NotiError(rs.Message);
                        }
                    },
                    error: AjaxFormError,
                });
            } else {
                NotiError("Không có dữ liệu nào để kết xuất.");
            }
        }

        function successAjaxUpload(rs) {
            if (rs.Status) {
                LoadData(rs.ListData);
                if (rs.ListData.length > 0) {
                    $("#block-dung").css("display", "block");
                }
                LoadDatalistFalse(rs.ListFalse);
                if (rs.ListFalse.length > 0) {
                    $("#block-sai").css("display", "block");
                }
            } else {
                NotiError(rs.Message);
            }
        }
        function uploadFile() {
            $("#block-dung").css("display", "none");
            $("#block-sai").css("display", "none");
            var valid = checkForm("formupload");
            if (valid) {
                $("#formupload").submit();
            } else {
                NotiError("Vui lòng kiểm tra lại thông tin");
            }
            return false;

        }
        var LoadDatalistFalse = function (item) {
            var config = [];
	config.push({
                "sClass": "center width50",
                "mData": function (data, type, dataToSet) {
                    return '<input class="global_checkbox" type="checkbox" name="ids" />'
                },
                "orderable": false
            });
config.push({
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[1]) + '">' + getValueDisplay(data[1]);
return str;
},
"orderable": false,
});
config.push({
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[2]) + '">' + getValueDisplay(data[2]);
return str;
},
"orderable": false,
});
config.push({
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[3]) + '">' + getValueDisplay(data[3]);
return str;
},
"orderable": false,
});
config.push({
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[4]) + '">' + getValueDisplay(data[4]);
return str;
},
"orderable": false,
});
config.push({
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[5]) + '">' + getValueDisplay(data[5]);
return str;
},
"orderable": false,
});
config.push({
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[6]) + '">' + getValueDisplay(data[6]);
return str;
},
"orderable": false,
});
config.push({
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[7]) + '">' + getValueDisplay(data[7]);
return str;
},
"orderable": false,
});
config.push({
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[8]) + '">' + getValueDisplay(data[8]);
return str;
},
"orderable": false,
});
            config.push({
                "mData": function (data, type, dataToSet) {
                    var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[9]) + '">' + getValueDisplay(data[9]);
                    return str;
                },
                "orderable": false,
            });

            


            var table = $("#tbl-false").DataTable({
                "language": {
                    "lengthMenu": "Hiển thị _MENU_ bản ghi trên trang",
                    "zeroRecords": "Không tìm thấy dữ liệu",
                    "info": "Hiển thị trang _PAGE_ của _PAGES_ trang",
                    "infoEmpty": "Không có bản ghi nào",
                    "infoFiltered": "(Đã lọc từ _MAX_ bản ghi)"
                },
                "lengthMenu": [[20, 50, 100, -1], [20, 50, 100, "Tất cả"]],
                "data": item,
                "bDestroy": true,
                "iDisplayLength": 20,
                paging: true,
                "aoColumns": config,
                "order": [[1, 'asc']],
                "fnDrawCallback": function (oSettings) {

                }
            });
        }
        var LoadData = function (item) {
            var table = $("#tbl-CheckData-truedata").DataTable({
                "language": {
                    "lengthMenu": "Hiển thị _MENU_ bản ghi trên trang",
                    "zeroRecords": "Không tìm thấy dữ liệu",
                    "info": "Hiển thị trang _PAGE_ của _PAGES_ trang",
                    "infoEmpty": "Không có bản ghi nào",
                    "infoFiltered": "(Đã lọc từ _MAX_ bản ghi)"
                },
                "data": item,
                "bDestroy": true,
                "lengthMenu": [[20, 50, 100, -1], [20, 50, 100, "Tất cả"]],
                "iDisplayLength": 20,
                paging: true,
                "order": [[0, 'none'], [1, 'asc']],
                "aoColumns": [
                     {
                         "sClass": "center width50",
                         "mData": function (data, type, dataToSet) {
                             return '<input class="global_checkbox" ' + ' type="checkbox" name="ids" value="' + data.Id + '" />';
                         },
                         "orderable": false
                     },
{
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" data-name="FullName" type="hidden" value="' + data.FullName + '">' + data.FullName;
return str;
},},{
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" data-name="UserName" type="hidden" value="' + data.UserName + '">' + data.UserName;
return str;
},},{
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" data-name="BirthDay" type="hidden" value="' + data.BirthDay + '">' + data.BirthDay;
return str;
},},{
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" data-name="Email" type="hidden" value="' + data.Email + '">' + data.Email;
return str;
},},{
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" data-name="PhoneNumber" type="hidden" value="' + data.PhoneNumber + '">' + data.PhoneNumber;
return str;
},},{
"mData": function(data, type, dataToSet) {
var str = '<input class="data-column" data-name="Address" type="hidden" value="' + data.Address + '">' + data.Address;
return str;
},},
                    
                        {
                            "sClass": "center",
                            "mData": function (data, type, dataToSet) {
                                var result = "<div class='btn-group'>";
                                result += "<a href='javascript:void(0)' onclick='RemoveRow(this)'  title = 'Xóa'><i class=' glyphicon glyphicon-remove' style='color:red'> </i></a>";
                                result += "</div>";
                                return result;
                            },

                        },
                ],
                "fnDrawCallback": function (oSettings) {

                }
            });
            //$(".txt-number").autoNumeric({ vMin: 0, mDec: 0 });
        }
        function RemoveRow(e) {
            var element = $(e);
            var row = element.parents("tr").first();
            row.remove();
        }
        function pagefunction() {
            var lstData=eval(@dataJson);
            successAjaxUpload(lstData);
        }
        pagefunction();
    </script>
}

